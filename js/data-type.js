"use strict";

// ! ======================================= ТИПИ ДАНИХ =======================================

/*Створіть об'єкт, який описує залізничний квиток і збережіть його у змінній ticket. Об'єкт повинен мати три поля:

початкова станція (ключ name from, вкажіть назву найближчої станції у вашій місцевості як значення);
кінцева станція (ключове ім'я до, вкажіть будь-яку іншу станцію в межах 100 км як значення);
ціна квитка (ключове ім'я price, вкажіть суму, яку ви хотіли б заплатити за цей квиток як значення).
Об'єкт має бути створений з використанням фігурних дужок, в яких одразу будуть перераховані всі створені поля. Потім виведіть значення всіх полів квитка на консоль.*/

const tickets = {
    from: "Lozova",
    to: "Lviv",
    price: 500,
};

// console.log(tickets);

// ------------------------------------------------------------------------------------------

/*Оголосіть порожній об'єкт і збережіть його у змінній person. Використовуючи крапкову нотацію, додайте до об'єкта поля імені та прізвища, ввівши свої дані як значення. Спробуйте відобразити окремі поля на консолі.*/

const person = {};

person.firstName = "Sofi";
person.lastName = "Sunshine";

// console.log(person);
// console.log(person.firstName);
// console.log(person.lastName);

// ------------------------------------------------------------------------------------------

/*Ми створюємо нашу невелику бібліотеку книг про програмування на JavaScript. У нас є три книги і ми хочемо створити їх список. Ми будемо зберігати три елементи інформації про кожну книгу: назву, автора та кількість сторінок:

Говоримо на JavaScript, Аксель Раушмайєр, 460;
Програмування JavaScript-додатків, Ерік Елліотт, 254;
Розуміння ECMAScript 6, Ніколас Закас, 352.
Створіть масив з трьох об'єктів, що представляють книги. Кожен об'єкт повинен мати такі властивості: назва, автор, сторінки.*/

const library = [
    {
        title: "Говоримо на JavaScript",
        author: "Аксель Раушмайєр",
        pages: 460,
    },

    {
        title: "Програмування JavaScript-додатків",
        author: "Ерік Елліотт",
        pages: 254,
    },

    {
        title: "Розуміння ECMAScript 6",
        author: "Ніколас Закас",
        pages: 352,
    },
];

// console.table(library);

// ------------------------------------------------------------------------------------------

/*Додати нову книгу до колекції: Вивчення шаблонів дизайну JavaScript, автор Адді Османі, 254 сторінки. Для цього скористайтеся відповідним методом, який додасть книгу в кінець масиву. Виведіть на екран довжину масиву і, по черзі, всі назви книг у колекції.*/

library.push({
    title: "Вивчення шаблонів дизайну JavaScript",
    author: "Адді Османі",
    pages: 254,
});

// console.table(library);

// ------------------------------------------------------------------------------------------

/*Використовуйте команду slice, щоб скопіювати останні дві книги до нового масиву.*/

const copyBooks = library.slice(-2);
// console.table(copyBooks);

// ------------------------------------------------------------------------------------------

/*Перша книга з колекції загублена за незрозумілих обставин. Ви вже змирилися з втратою, тому видаліть її з масиву. Який метод ви використаєте для цього? Виведіть на екран довжину масиву і по черзі всі назви книг з колекції.*/

library.shift();
// console.table(library.length);
// console.table(library);

// ------------------------------------------------------------------------------------------

/*Вивести суму сторінок усіх книг з колекції.*/

const totalPages = library.reduce((acc, book) => acc + book.pages, 0);
// console.log(totalPages);

// ! =================================== ЛАБОРАТОРНА РОБОТА ===================================

/*Сценарій
Пам'ятаєте список контактів, який ви створили під час виконання завдання з попередньої лабораторної роботи? Погодьтеся, на перший погляд він виглядав досить дивно. Нам довелося використовувати дев'ять змінних для зберігання інформації лише про трьох користувачів. Що ще гірше, додавання кожного нового користувача вимагало б створення ще трьох змінних. Це не зручно і не практично. На щастя, з того часу ми дізналися дещо про масиви та об'єкти, що дозволить нам зберегти наш список у дещо зручніший спосіб. Використовуючи ті ж дані, що і в попередній лабораторній роботі, створимо список контактів у вигляді масиву, кожен елемент якого буде об'єктом, що описує одного користувача. Таким чином, ми повинні отримати триелементний масив, і кожен об'єкт, розміщений у ньому, буде містити три елементи інформації (ім'я, телефон та електронну пошту).

В кінці оголошеного таким чином списку додайте новий контакт, використовуючи відповідний метод масиву. Новим контактом буде Мейзі Хейлі / 0913 531 3030 / risus.Quisque@urna.ca.

Відобразіть перший і останній контакт, знову ж таки у форматі: ім'я / телефон / електронна пошта. Використовуйте властивість довжини масиву, щоб визначити індекс останнього елемента. Пам'ятайте, що елементи масиву індексуються, починаючи з 0.*/

const newContacts = [
    {
        name: "Maxwell Wright",
        phone: "(0191) 719 6495",
        email: "Curabitur.egestas.nunc@nonummuyac.co.uk",
    },

    {
        name: "Rija Vilarreal",
        phone: "0866 398 2895",
        email: "posuere.vulputate@sed.com",
    },

    {
        name: "Helen Richards",
        phone: "0800 1111",
        email: "libero@convallis.com",
    },
];

newContacts.push({
    name: "Maisie Haley",
    phone: "0913 531 3030",
    email: "risus.Quisque@urna.ca",
});

// console.table(newContacts[0]);
// console.table(newContacts[newContacts.length - 1]);
